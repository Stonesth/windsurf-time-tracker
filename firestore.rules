rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction helper pour vérifier si l'utilisateur est authentifié
    function isAuthenticated() {
      return request.auth != null;
    }

    // Fonction helper pour vérifier si l'utilisateur est admin
    function isAdmin() {
      return isAuthenticated() && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN' ||
        request.auth.token.email == 'pierre.thonon@gmail.com'
      );
    }

    // Fonction helper pour vérifier si c'est l'email admin initial
    function isInitialAdminEmail() {
      return request.auth.token.email == 'pierre.thonon@gmail.com';
    }

    // Règles pour la collection users
    match /users/{userId} {
      // Permettre la lecture pour vérifier l'admin initial
      allow read: if true;
      
      // Permettre la création pour l'admin initial ou les admins existants
      allow create: if isAuthenticated() && (isInitialAdminEmail() || isAdmin());
      
      // Permettre la modification/suppression aux admins uniquement
      allow update, delete: if isAdmin();
    }

    // Règles pour la collection timeEntries
    match /timeEntries/{entryId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        isAdmin() ||
        resource.data.userId == request.auth.uid
      );
    }

    // Règles pour la collection projects
    match /projects/{projectId} {
      // Autoriser la lecture si l'utilisateur est authentifié
      allow read: if isAuthenticated();
      
      // Autoriser la création si l'utilisateur est authentifié
      allow create: if isAuthenticated();
      
      // Autoriser la mise à jour si l'utilisateur est admin ou membre du projet
      allow update: if isAuthenticated() && (
        isAdmin() ||
        resource.data.members[request.auth.uid] != null ||
        resource.data.createdBy == request.auth.uid
      );
      
      // Autoriser la suppression si l'utilisateur est admin ou créateur
      allow delete: if isAuthenticated() && (
        isAdmin() ||
        resource.data.createdBy == request.auth.uid
      );

      // Règles pour la sous-collection timeEntries dans les projets
      match /timeEntries/{entryId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && (
          isAdmin() ||
          resource.data.userId == request.auth.uid
        );
      }
    }
  }
}
