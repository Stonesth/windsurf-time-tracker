rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction helper pour vérifier si l'utilisateur est authentifié
    function isAuthenticated() {
      return request.auth != null;
    }

    // Fonction helper pour vérifier si l'utilisateur est admin
    function isAdmin() {
      return isAuthenticated() && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN' ||
        request.auth.token.email == 'pierre.thonon@gmail.com'
      );
    }

    // Fonction helper pour vérifier si c'est l'email admin initial
    function isInitialAdminEmail() {
      return request.auth.token.email == 'pierre.thonon@gmail.com';
    }

    // Fonction helper pour vérifier si l'utilisateur a un rôle qui permet l'écriture
    function canWrite() {
      let userData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userData.role == 'ADMIN' || 
             userData.role == 'PROJECT_LEADER' || 
             userData.role == 'USER';
    }

    // Règles pour la collection users
    match /users/{userId} {
      // Permettre la lecture pour vérifier l'admin initial
      allow read: if true;
      
      // Permettre la création si :
      // 1. L'utilisateur est authentifié ET
      // 2. Le document qu'il crée correspond à son propre UID OU il est admin
      allow create: if isAuthenticated() && (
        userId == request.auth.uid || 
        isInitialAdminEmail() || 
        isAdmin()
      );
      
      // Permettre la modification/suppression aux admins uniquement
      allow update, delete: if isAdmin();
    }

    // Règles pour la collection timeEntries
    match /timeEntries/{entryId} {
      allow read: if isAuthenticated();
      // Seuls les utilisateurs avec des rôles non-READ peuvent créer des entrées
      allow create: if isAuthenticated() && canWrite();
      allow update, delete: if isAuthenticated() && (
        isAdmin() ||
        (canWrite() && resource.data.userId == request.auth.uid)
      );
    }

    // Règles pour la collection projects
    match /projects/{projectId} {
      // Autoriser la lecture si l'utilisateur est authentifié
      allow read: if isAuthenticated();
      
      // Seuls les utilisateurs avec des rôles non-READ peuvent créer des projets
      allow create: if isAuthenticated() && canWrite();
      
      // Seuls les admins peuvent modifier/supprimer des projets
      allow update, delete: if isAdmin();

      // Règles pour la sous-collection timeEntries dans les projets
      match /timeEntries/{entryId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated() && canWrite();
        allow update, delete: if isAuthenticated() && (
          isAdmin() ||
          (canWrite() && resource.data.userId == request.auth.uid)
        );
      }
    }
  }
}
